apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-aws-eks-deployment
  labels:
    app: spring-aws-eks
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spring-aws-eks
  template:
    metadata:
      labels:
        app: spring-aws-eks
    spec:
      containers:
        - name: spring-aws-eks
          image: <<REPLACE WITH DOCKER IMAGE>>>
          ports:
            - containerPort: 3000

---
kind: Service
apiVersion: v1
metadata:
  name: spring-aws-eks-service
spec:
  type: NodePort
  selector:
    app: spring-aws-eks
  ports:
    - protocol: TCP
      port: 8086
      targetPort: 8086
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-aws-eks-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
spec:
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: spring-aws-eks-service
                port:
                  number: 8086